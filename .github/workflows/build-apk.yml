name: Build Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk wget unzip zip squashfs-tools git python3-dev build-essential
        
    - name: Install Android SDK the right way
      run: |
        # Download and install Android SDK
        cd /tmp
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        
        # Create Android SDK directory
        mkdir -p "$HOME/Android/Sdk"
        mv cmdline-tools "$HOME/Android/Sdk/"
        
        # Set environment variables
        echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "$HOME/Android/Sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/Android/Sdk/platform-tools" >> $GITHUB_PATH
        
        # Accept licenses
        yes | "$HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$HOME/Android/Sdk" --licenses
        
        # Install only what we need
        "$HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$HOME/Android/Sdk" "platform-tools"
        "$HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$HOME/Android/Sdk" "platforms;android-29"
        "$HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$HOME/Android/Sdk" "build-tools;29.0.3"
        
        # Create the EXACT directory structure Buildozer expects
        mkdir -p "$HOME/.buildozer/android/platform/android-sdk"
        
        # Copy everything to Buildozer's expected location
        cp -r "$HOME/Android/Sdk"/* "$HOME/.buildozer/android/platform/android-sdk/"
        
        # Create the legacy tools structure
        mkdir -p "$HOME/.buildozer/android/platform/android-sdk/tools/bin"
        cp "$HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager" "$HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager"
        chmod +x "$HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager"
        
        # Make sure build-tools is in the right place
        mkdir -p "$HOME/.buildozer/android/platform/android-sdk/build-tools"
        cp -r "$HOME/Android/Sdk/build-tools/29.0.3" "$HOME/.buildozer/android/platform/android-sdk/build-tools/"
        
        # Add build-tools to PATH
        echo "$HOME/.buildozer/android/platform/android-sdk/build-tools/29.0.3" >> $GITHUB_PATH
        
        # Verify everything is in place
        echo "Verifying installation:"
        ls -la "$HOME/.buildozer/android/platform/android-sdk/build-tools/29.0.3/" || true
        if [ -f "$HOME/.buildozer/android/platform/android-sdk/build-tools/29.0.3/aidl" ]; then
          echo "aidl found!"
          chmod +x "$HOME/.buildozer/android/platform/android-sdk/build-tools/29.0.3/aidl"
        else
          echo "aidl not found!"
        fi
        
    - name: Install Python dependencies
      run: |
        pip install buildozer cython
        
    - name: Build APK
      run: |
        # Set the environment variable Buildozer needs
        export ANDROIDSDK="$HOME/.buildozer/android/platform/android-sdk"
        
        # Run Buildozer
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: bin/*.apk
