name: Build Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk wget unzip zip squashfs-tools git python3-dev build-essential
        
    - name: Install Android SDK command-line tools and build-tools
      run: |
        export ANDROID_SDK_ROOT="$HOME/Android/Sdk"
        mkdir -p "$ANDROID_SDK_ROOT"/cmdline-tools
        
        # Download latest command-line tools
        cd /tmp
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip
        
        # Check what was extracted
        ls -la
        ls -la tools/ || echo "No tools directory found"
        
        # Move into the expected layout - handle case where tools might be in different location
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        if [ -d "tools" ]; then
          mv tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
        else
          # If tools directory doesn't exist, move everything from current directory
          mv * "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
        fi
        
        # Export env vars for subsequent steps
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
        
        # Install platform-tools, an Android platform and build-tools (contains aidl)
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "platforms;android-29" "build-tools;29.0.3"
        
        # Accept licenses
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" --licenses
        
    - name: Install Python dependencies
      run: |
        pip install buildozer cython
        
    - name: Build APK
      run: |
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: bin/*.apk
